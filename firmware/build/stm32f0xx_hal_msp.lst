ARM GAS  /tmp/cc9hJx5N.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_msp.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB37:
  25              		.file 1 "Src/stm32f0xx_hal_msp.c"
   1:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f0xx_hal_msp.c **** /**
   3:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   4:Src/stm32f0xx_hal_msp.c ****   * File Name          : stm32f0xx_hal_msp.c
   5:Src/stm32f0xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization
   6:Src/stm32f0xx_hal_msp.c ****   *                      and de-Initialization codes.
   7:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   8:Src/stm32f0xx_hal_msp.c ****   * @attention
   9:Src/stm32f0xx_hal_msp.c ****   *
  10:Src/stm32f0xx_hal_msp.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  11:Src/stm32f0xx_hal_msp.c ****   * All rights reserved.</center></h2>
  12:Src/stm32f0xx_hal_msp.c ****   *
  13:Src/stm32f0xx_hal_msp.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  14:Src/stm32f0xx_hal_msp.c ****   * the "License"; You may not use this file except in compliance with the
  15:Src/stm32f0xx_hal_msp.c ****   * License. You may obtain a copy of the License at:
  16:Src/stm32f0xx_hal_msp.c ****   *                        opensource.org/licenses/BSD-3-Clause
  17:Src/stm32f0xx_hal_msp.c ****   *
  18:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
  19:Src/stm32f0xx_hal_msp.c ****   */
  20:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Header */
  21:Src/stm32f0xx_hal_msp.c **** 
  22:Src/stm32f0xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/stm32f0xx_hal_msp.c **** #include "main.h"
  24:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32f0xx_hal_msp.c **** 
  26:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Includes */
  27:Src/stm32f0xx_hal_msp.c **** 
  28:Src/stm32f0xx_hal_msp.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_adc;
  31:Src/stm32f0xx_hal_msp.c **** 
  32:Src/stm32f0xx_hal_msp.c **** /* USER CODE END TD */
  33:Src/stm32f0xx_hal_msp.c **** 
ARM GAS  /tmp/cc9hJx5N.s 			page 2


  34:Src/stm32f0xx_hal_msp.c **** /* Private define ------------------------------------------------------------*/
  35:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Define */
  36:Src/stm32f0xx_hal_msp.c **** 
  37:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Define */
  38:Src/stm32f0xx_hal_msp.c **** 
  39:Src/stm32f0xx_hal_msp.c **** /* Private macro -------------------------------------------------------------*/
  40:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Macro */
  41:Src/stm32f0xx_hal_msp.c **** 
  42:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Macro */
  43:Src/stm32f0xx_hal_msp.c **** 
  44:Src/stm32f0xx_hal_msp.c **** /* Private variables ---------------------------------------------------------*/
  45:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN PV */
  46:Src/stm32f0xx_hal_msp.c **** 
  47:Src/stm32f0xx_hal_msp.c **** /* USER CODE END PV */
  48:Src/stm32f0xx_hal_msp.c **** 
  49:Src/stm32f0xx_hal_msp.c **** /* Private function prototypes -----------------------------------------------*/
  50:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN PFP */
  51:Src/stm32f0xx_hal_msp.c **** 
  52:Src/stm32f0xx_hal_msp.c **** /* USER CODE END PFP */
  53:Src/stm32f0xx_hal_msp.c **** 
  54:Src/stm32f0xx_hal_msp.c **** /* External functions --------------------------------------------------------*/
  55:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN ExternalFunctions */
  56:Src/stm32f0xx_hal_msp.c **** 
  57:Src/stm32f0xx_hal_msp.c **** /* USER CODE END ExternalFunctions */
  58:Src/stm32f0xx_hal_msp.c **** 
  59:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  60:Src/stm32f0xx_hal_msp.c **** 
  61:Src/stm32f0xx_hal_msp.c **** /* USER CODE END 0 */
  62:Src/stm32f0xx_hal_msp.c **** 
  63:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
  64:Src/stm32f0xx_hal_msp.c ****                     /**
  65:Src/stm32f0xx_hal_msp.c ****   * Initializes the Global MSP.
  66:Src/stm32f0xx_hal_msp.c ****   */
  67:Src/stm32f0xx_hal_msp.c **** void HAL_MspInit(void)
  68:Src/stm32f0xx_hal_msp.c **** {
  26              		.loc 1 68 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              	.LBB2:
  69:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
  70:Src/stm32f0xx_hal_msp.c **** 
  71:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
  72:Src/stm32f0xx_hal_msp.c **** 
  73:Src/stm32f0xx_hal_msp.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
  35              		.loc 1 73 0
  36 0002 0A4B     		ldr	r3, .L2
  37 0004 9969     		ldr	r1, [r3, #24]
  38 0006 0122     		movs	r2, #1
  39 0008 1143     		orrs	r1, r2
  40 000a 9961     		str	r1, [r3, #24]
  41 000c 9969     		ldr	r1, [r3, #24]
  42 000e 0A40     		ands	r2, r1
ARM GAS  /tmp/cc9hJx5N.s 			page 3


  43 0010 0092     		str	r2, [sp]
  44 0012 009A     		ldr	r2, [sp]
  45              	.LBE2:
  46              	.LBB3:
  74:Src/stm32f0xx_hal_msp.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  47              		.loc 1 74 0
  48 0014 DA69     		ldr	r2, [r3, #28]
  49 0016 8021     		movs	r1, #128
  50 0018 4905     		lsls	r1, r1, #21
  51 001a 0A43     		orrs	r2, r1
  52 001c DA61     		str	r2, [r3, #28]
  53 001e DB69     		ldr	r3, [r3, #28]
  54 0020 0B40     		ands	r3, r1
  55 0022 0193     		str	r3, [sp, #4]
  56 0024 019B     		ldr	r3, [sp, #4]
  57              	.LBE3:
  75:Src/stm32f0xx_hal_msp.c **** 
  76:Src/stm32f0xx_hal_msp.c ****   /* System interrupt init*/
  77:Src/stm32f0xx_hal_msp.c **** 
  78:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
  79:Src/stm32f0xx_hal_msp.c **** 
  80:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
  81:Src/stm32f0xx_hal_msp.c **** }
  58              		.loc 1 81 0
  59 0026 02B0     		add	sp, sp, #8
  60              		@ sp needed
  61 0028 7047     		bx	lr
  62              	.L3:
  63 002a C046     		.align	2
  64              	.L2:
  65 002c 00100240 		.word	1073876992
  66              		.cfi_endproc
  67              	.LFE37:
  69              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  70              		.align	1
  71              		.global	HAL_ADC_MspInit
  72              		.syntax unified
  73              		.code	16
  74              		.thumb_func
  75              		.fpu softvfp
  77              	HAL_ADC_MspInit:
  78              	.LFB38:
  82:Src/stm32f0xx_hal_msp.c **** 
  83:Src/stm32f0xx_hal_msp.c **** /**
  84:Src/stm32f0xx_hal_msp.c **** * @brief ADC MSP Initialization
  85:Src/stm32f0xx_hal_msp.c **** * This function configures the hardware resources used in this example
  86:Src/stm32f0xx_hal_msp.c **** * @param hadc: ADC handle pointer
  87:Src/stm32f0xx_hal_msp.c **** * @retval None
  88:Src/stm32f0xx_hal_msp.c **** */
  89:Src/stm32f0xx_hal_msp.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
  90:Src/stm32f0xx_hal_msp.c **** {
  79              		.loc 1 90 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 32
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              	.LVL0:
  84 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/cc9hJx5N.s 			page 4


  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 12
  87              		.cfi_offset 4, -12
  88              		.cfi_offset 5, -8
  89              		.cfi_offset 14, -4
  90 0002 89B0     		sub	sp, sp, #36
  91              	.LCFI2:
  92              		.cfi_def_cfa_offset 48
  93 0004 0400     		movs	r4, r0
  91:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  94              		.loc 1 91 0
  95 0006 1422     		movs	r2, #20
  96 0008 0021     		movs	r1, #0
  97 000a 03A8     		add	r0, sp, #12
  98              	.LVL1:
  99 000c FFF7FEFF 		bl	memset
 100              	.LVL2:
  92:Src/stm32f0xx_hal_msp.c ****   if(hadc->Instance==ADC1)
 101              		.loc 1 92 0
 102 0010 1D4B     		ldr	r3, .L7
 103 0012 2268     		ldr	r2, [r4]
 104 0014 9A42     		cmp	r2, r3
 105 0016 01D0     		beq	.L6
 106              	.L4:
  93:Src/stm32f0xx_hal_msp.c ****   {
  94:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
  95:Src/stm32f0xx_hal_msp.c **** 
  96:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END ADC1_MspInit 0 */
  97:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
  98:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
  99:Src/stm32f0xx_hal_msp.c **** 
 100:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 101:Src/stm32f0xx_hal_msp.c ****     /**ADC GPIO Configuration
 102:Src/stm32f0xx_hal_msp.c ****     PA0     ------> ADC_IN0
 103:Src/stm32f0xx_hal_msp.c ****     PA1     ------> ADC_IN1
 104:Src/stm32f0xx_hal_msp.c ****     PA2     ------> ADC_IN2
 105:Src/stm32f0xx_hal_msp.c ****     PA5     ------> ADC_IN5
 106:Src/stm32f0xx_hal_msp.c ****     */
 107:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = IIN_Pin|TTIP_Pin|UIN_Pin|TREF_Pin;
 108:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 109:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 110:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 111:Src/stm32f0xx_hal_msp.c **** 
 112:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Instance = DMA1_Channel1;
 113:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 114:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 115:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 116:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 117:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 118:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.Mode = DMA_CIRCULAR;
 119:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.Priority = DMA_PRIORITY_HIGH;
 120:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_Init(&hdma_adc);
 121:Src/stm32f0xx_hal_msp.c **** 
 122:Src/stm32f0xx_hal_msp.c ****     __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc);
 123:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 124:Src/stm32f0xx_hal_msp.c **** 
 125:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END ADC1_MspInit 1 */
ARM GAS  /tmp/cc9hJx5N.s 			page 5


 126:Src/stm32f0xx_hal_msp.c ****   }
 127:Src/stm32f0xx_hal_msp.c **** 
 128:Src/stm32f0xx_hal_msp.c **** }
 107              		.loc 1 128 0
 108 0018 09B0     		add	sp, sp, #36
 109              		@ sp needed
 110              	.LVL3:
 111 001a 30BD     		pop	{r4, r5, pc}
 112              	.LVL4:
 113              	.L6:
 114              	.LBB4:
  98:Src/stm32f0xx_hal_msp.c **** 
 115              		.loc 1 98 0
 116 001c 1B4B     		ldr	r3, .L7+4
 117 001e 9969     		ldr	r1, [r3, #24]
 118 0020 8020     		movs	r0, #128
 119 0022 8000     		lsls	r0, r0, #2
 120 0024 0143     		orrs	r1, r0
 121 0026 9961     		str	r1, [r3, #24]
 122 0028 9A69     		ldr	r2, [r3, #24]
 123 002a 0240     		ands	r2, r0
 124 002c 0192     		str	r2, [sp, #4]
 125 002e 019A     		ldr	r2, [sp, #4]
 126              	.LBE4:
 127              	.LBB5:
 100:Src/stm32f0xx_hal_msp.c ****     /**ADC GPIO Configuration
 128              		.loc 1 100 0
 129 0030 5A69     		ldr	r2, [r3, #20]
 130 0032 8021     		movs	r1, #128
 131 0034 8902     		lsls	r1, r1, #10
 132 0036 0A43     		orrs	r2, r1
 133 0038 5A61     		str	r2, [r3, #20]
 134 003a 5B69     		ldr	r3, [r3, #20]
 135 003c 0B40     		ands	r3, r1
 136 003e 0293     		str	r3, [sp, #8]
 137 0040 029B     		ldr	r3, [sp, #8]
 138              	.LBE5:
 107:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 139              		.loc 1 107 0
 140 0042 2723     		movs	r3, #39
 141 0044 0393     		str	r3, [sp, #12]
 108:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 142              		.loc 1 108 0
 143 0046 243B     		subs	r3, r3, #36
 144 0048 0493     		str	r3, [sp, #16]
 110:Src/stm32f0xx_hal_msp.c **** 
 145              		.loc 1 110 0
 146 004a 7138     		subs	r0, r0, #113
 147 004c FF38     		subs	r0, r0, #255
 148 004e 03A9     		add	r1, sp, #12
 149 0050 C005     		lsls	r0, r0, #23
 150 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 151              	.LVL5:
 112:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 152              		.loc 1 112 0
 153 0056 0E4D     		ldr	r5, .L7+8
 154 0058 0E4B     		ldr	r3, .L7+12
ARM GAS  /tmp/cc9hJx5N.s 			page 6


 155 005a 2B60     		str	r3, [r5]
 113:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 156              		.loc 1 113 0
 157 005c 0023     		movs	r3, #0
 158 005e 6B60     		str	r3, [r5, #4]
 114:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 159              		.loc 1 114 0
 160 0060 AB60     		str	r3, [r5, #8]
 115:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 161              		.loc 1 115 0
 162 0062 8033     		adds	r3, r3, #128
 163 0064 EB60     		str	r3, [r5, #12]
 116:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 164              		.loc 1 116 0
 165 0066 8033     		adds	r3, r3, #128
 166 0068 2B61     		str	r3, [r5, #16]
 117:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.Mode = DMA_CIRCULAR;
 167              		.loc 1 117 0
 168 006a 8023     		movs	r3, #128
 169 006c DB00     		lsls	r3, r3, #3
 170 006e 6B61     		str	r3, [r5, #20]
 118:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.Priority = DMA_PRIORITY_HIGH;
 171              		.loc 1 118 0
 172 0070 2023     		movs	r3, #32
 173 0072 AB61     		str	r3, [r5, #24]
 119:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_Init(&hdma_adc);
 174              		.loc 1 119 0
 175 0074 8023     		movs	r3, #128
 176 0076 9B01     		lsls	r3, r3, #6
 177 0078 EB61     		str	r3, [r5, #28]
 120:Src/stm32f0xx_hal_msp.c **** 
 178              		.loc 1 120 0
 179 007a 2800     		movs	r0, r5
 180 007c FFF7FEFF 		bl	HAL_DMA_Init
 181              	.LVL6:
 122:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 182              		.loc 1 122 0
 183 0080 E563     		str	r5, [r4, #60]
 184 0082 6C62     		str	r4, [r5, #36]
 185              		.loc 1 128 0
 186 0084 C8E7     		b	.L4
 187              	.L8:
 188 0086 C046     		.align	2
 189              	.L7:
 190 0088 00240140 		.word	1073816576
 191 008c 00100240 		.word	1073876992
 192 0090 00000000 		.word	hdma_adc
 193 0094 08000240 		.word	1073872904
 194              		.cfi_endproc
 195              	.LFE38:
 197              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 198              		.align	1
 199              		.global	HAL_ADC_MspDeInit
 200              		.syntax unified
 201              		.code	16
 202              		.thumb_func
 203              		.fpu softvfp
ARM GAS  /tmp/cc9hJx5N.s 			page 7


 205              	HAL_ADC_MspDeInit:
 206              	.LFB39:
 129:Src/stm32f0xx_hal_msp.c **** 
 130:Src/stm32f0xx_hal_msp.c **** /**
 131:Src/stm32f0xx_hal_msp.c **** * @brief ADC MSP De-Initialization
 132:Src/stm32f0xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 133:Src/stm32f0xx_hal_msp.c **** * @param hadc: ADC handle pointer
 134:Src/stm32f0xx_hal_msp.c **** * @retval None
 135:Src/stm32f0xx_hal_msp.c **** */
 136:Src/stm32f0xx_hal_msp.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 137:Src/stm32f0xx_hal_msp.c **** {
 207              		.loc 1 137 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              	.LVL7:
 212 0000 10B5     		push	{r4, lr}
 213              	.LCFI3:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 4, -8
 216              		.cfi_offset 14, -4
 217 0002 0400     		movs	r4, r0
 138:Src/stm32f0xx_hal_msp.c ****   if(hadc->Instance==ADC1)
 218              		.loc 1 138 0
 219 0004 094B     		ldr	r3, .L12
 220 0006 0268     		ldr	r2, [r0]
 221 0008 9A42     		cmp	r2, r3
 222 000a 00D0     		beq	.L11
 223              	.LVL8:
 224              	.L9:
 139:Src/stm32f0xx_hal_msp.c ****   {
 140:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 141:Src/stm32f0xx_hal_msp.c **** 
 142:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 143:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 144:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 145:Src/stm32f0xx_hal_msp.c **** 
 146:Src/stm32f0xx_hal_msp.c ****     /**ADC GPIO Configuration
 147:Src/stm32f0xx_hal_msp.c ****     PA0     ------> ADC_IN0
 148:Src/stm32f0xx_hal_msp.c ****     PA1     ------> ADC_IN1
 149:Src/stm32f0xx_hal_msp.c ****     PA2     ------> ADC_IN2
 150:Src/stm32f0xx_hal_msp.c ****     PA5     ------> ADC_IN5
 151:Src/stm32f0xx_hal_msp.c ****     */
 152:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, IIN_Pin|TTIP_Pin|UIN_Pin|TREF_Pin);
 153:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(hadc->DMA_Handle);
 154:Src/stm32f0xx_hal_msp.c **** 
 155:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 156:Src/stm32f0xx_hal_msp.c **** 
 157:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 158:Src/stm32f0xx_hal_msp.c ****   }
 159:Src/stm32f0xx_hal_msp.c **** 
 160:Src/stm32f0xx_hal_msp.c **** }
 225              		.loc 1 160 0
 226              		@ sp needed
 227              	.LVL9:
 228 000c 10BD     		pop	{r4, pc}
 229              	.LVL10:
ARM GAS  /tmp/cc9hJx5N.s 			page 8


 230              	.L11:
 144:Src/stm32f0xx_hal_msp.c **** 
 231              		.loc 1 144 0
 232 000e 084A     		ldr	r2, .L12+4
 233 0010 9369     		ldr	r3, [r2, #24]
 234 0012 0849     		ldr	r1, .L12+8
 235 0014 0B40     		ands	r3, r1
 236 0016 9361     		str	r3, [r2, #24]
 152:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(hadc->DMA_Handle);
 237              		.loc 1 152 0
 238 0018 9020     		movs	r0, #144
 239              	.LVL11:
 240 001a 2721     		movs	r1, #39
 241 001c C005     		lsls	r0, r0, #23
 242 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 243              	.LVL12:
 153:Src/stm32f0xx_hal_msp.c **** 
 244              		.loc 1 153 0
 245 0022 E06B     		ldr	r0, [r4, #60]
 246 0024 FFF7FEFF 		bl	HAL_DMA_DeInit
 247              	.LVL13:
 248              		.loc 1 160 0
 249 0028 F0E7     		b	.L9
 250              	.L13:
 251 002a C046     		.align	2
 252              	.L12:
 253 002c 00240140 		.word	1073816576
 254 0030 00100240 		.word	1073876992
 255 0034 FFFDFFFF 		.word	-513
 256              		.cfi_endproc
 257              	.LFE39:
 259              		.section	.text.HAL_I2C_MspInit,"ax",%progbits
 260              		.align	1
 261              		.global	HAL_I2C_MspInit
 262              		.syntax unified
 263              		.code	16
 264              		.thumb_func
 265              		.fpu softvfp
 267              	HAL_I2C_MspInit:
 268              	.LFB40:
 161:Src/stm32f0xx_hal_msp.c **** 
 162:Src/stm32f0xx_hal_msp.c **** /**
 163:Src/stm32f0xx_hal_msp.c **** * @brief I2C MSP Initialization
 164:Src/stm32f0xx_hal_msp.c **** * This function configures the hardware resources used in this example
 165:Src/stm32f0xx_hal_msp.c **** * @param hi2c: I2C handle pointer
 166:Src/stm32f0xx_hal_msp.c **** * @retval None
 167:Src/stm32f0xx_hal_msp.c **** */
 168:Src/stm32f0xx_hal_msp.c **** void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
 169:Src/stm32f0xx_hal_msp.c **** {
 269              		.loc 1 169 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 40
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              	.LVL14:
 274 0000 10B5     		push	{r4, lr}
 275              	.LCFI4:
 276              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc9hJx5N.s 			page 9


 277              		.cfi_offset 4, -8
 278              		.cfi_offset 14, -4
 279 0002 8AB0     		sub	sp, sp, #40
 280              	.LCFI5:
 281              		.cfi_def_cfa_offset 48
 282 0004 0400     		movs	r4, r0
 170:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 283              		.loc 1 170 0
 284 0006 1422     		movs	r2, #20
 285 0008 0021     		movs	r1, #0
 286 000a 05A8     		add	r0, sp, #20
 287              	.LVL15:
 288 000c FFF7FEFF 		bl	memset
 289              	.LVL16:
 171:Src/stm32f0xx_hal_msp.c ****   if(hi2c->Instance==I2C1)
 290              		.loc 1 171 0
 291 0010 2368     		ldr	r3, [r4]
 292 0012 254A     		ldr	r2, .L19
 293 0014 9342     		cmp	r3, r2
 294 0016 04D0     		beq	.L17
 172:Src/stm32f0xx_hal_msp.c ****   {
 173:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C1_MspInit 0 */
 174:Src/stm32f0xx_hal_msp.c **** 
 175:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END I2C1_MspInit 0 */
 176:Src/stm32f0xx_hal_msp.c **** 
 177:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 178:Src/stm32f0xx_hal_msp.c ****     /**I2C1 GPIO Configuration
 179:Src/stm32f0xx_hal_msp.c ****     PB6     ------> I2C1_SCL
 180:Src/stm32f0xx_hal_msp.c ****     PB7     ------> I2C1_SDA
 181:Src/stm32f0xx_hal_msp.c ****     */
 182:Src/stm32f0xx_hal_msp.c **** 
 183:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = OLED_SCL_Pin|OLED_SDA_Pin;
 184:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 185:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 186:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 187:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_I2C1;
 188:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 189:Src/stm32f0xx_hal_msp.c ****     
 190:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 191:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_I2C1_CLK_ENABLE();
 192:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C1_MspInit 1 */
 193:Src/stm32f0xx_hal_msp.c **** 
 194:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END I2C1_MspInit 1 */
 195:Src/stm32f0xx_hal_msp.c ****   }
 196:Src/stm32f0xx_hal_msp.c ****   else if(hi2c->Instance==I2C2)
 295              		.loc 1 196 0
 296 0018 244A     		ldr	r2, .L19+4
 297 001a 9342     		cmp	r3, r2
 298 001c 22D0     		beq	.L18
 299              	.LVL17:
 300              	.L14:
 197:Src/stm32f0xx_hal_msp.c ****   {
 198:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C2_MspInit 0 */
 199:Src/stm32f0xx_hal_msp.c **** 
 200:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END I2C2_MspInit 0 */
 201:Src/stm32f0xx_hal_msp.c **** 
 202:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
ARM GAS  /tmp/cc9hJx5N.s 			page 10


 203:Src/stm32f0xx_hal_msp.c ****     /**I2C2 GPIO Configuration
 204:Src/stm32f0xx_hal_msp.c ****     PB10     ------> I2C2_SCL
 205:Src/stm32f0xx_hal_msp.c ****     PB11     ------> I2C2_SDA
 206:Src/stm32f0xx_hal_msp.c ****     */
 207:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = STUSB_SCL_Pin|STUSB_SDA_Pin;
 208:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 209:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 210:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 211:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_I2C2;
 212:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 213:Src/stm32f0xx_hal_msp.c **** 
 214:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 215:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_I2C2_CLK_ENABLE();
 216:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C2_MspInit 1 */
 217:Src/stm32f0xx_hal_msp.c **** 
 218:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END I2C2_MspInit 1 */
 219:Src/stm32f0xx_hal_msp.c ****   }
 220:Src/stm32f0xx_hal_msp.c **** 
 221:Src/stm32f0xx_hal_msp.c **** }
 301              		.loc 1 221 0
 302 001e 0AB0     		add	sp, sp, #40
 303              		@ sp needed
 304 0020 10BD     		pop	{r4, pc}
 305              	.LVL18:
 306              	.L17:
 307              	.LBB6:
 177:Src/stm32f0xx_hal_msp.c ****     /**I2C1 GPIO Configuration
 308              		.loc 1 177 0
 309 0022 234C     		ldr	r4, .L19+8
 310              	.LVL19:
 311 0024 6269     		ldr	r2, [r4, #20]
 312 0026 8021     		movs	r1, #128
 313 0028 C902     		lsls	r1, r1, #11
 314 002a 0A43     		orrs	r2, r1
 315 002c 6261     		str	r2, [r4, #20]
 316 002e 6369     		ldr	r3, [r4, #20]
 317 0030 0B40     		ands	r3, r1
 318 0032 0193     		str	r3, [sp, #4]
 319 0034 019B     		ldr	r3, [sp, #4]
 320              	.LBE6:
 183:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 321              		.loc 1 183 0
 322 0036 C023     		movs	r3, #192
 323 0038 0593     		str	r3, [sp, #20]
 184:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 324              		.loc 1 184 0
 325 003a AE3B     		subs	r3, r3, #174
 326 003c 0693     		str	r3, [sp, #24]
 185:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 327              		.loc 1 185 0
 328 003e 113B     		subs	r3, r3, #17
 329 0040 0793     		str	r3, [sp, #28]
 186:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_I2C1;
 330              		.loc 1 186 0
 331 0042 0322     		movs	r2, #3
 332 0044 0892     		str	r2, [sp, #32]
 187:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
ARM GAS  /tmp/cc9hJx5N.s 			page 11


 333              		.loc 1 187 0
 334 0046 0993     		str	r3, [sp, #36]
 188:Src/stm32f0xx_hal_msp.c ****     
 335              		.loc 1 188 0
 336 0048 05A9     		add	r1, sp, #20
 337 004a 1A48     		ldr	r0, .L19+12
 338 004c FFF7FEFF 		bl	HAL_GPIO_Init
 339              	.LVL20:
 340              	.LBB7:
 191:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C1_MspInit 1 */
 341              		.loc 1 191 0
 342 0050 E269     		ldr	r2, [r4, #28]
 343 0052 8021     		movs	r1, #128
 344 0054 8903     		lsls	r1, r1, #14
 345 0056 0A43     		orrs	r2, r1
 346 0058 E261     		str	r2, [r4, #28]
 347 005a E369     		ldr	r3, [r4, #28]
 348 005c 0B40     		ands	r3, r1
 349 005e 0293     		str	r3, [sp, #8]
 350 0060 029B     		ldr	r3, [sp, #8]
 351              	.LBE7:
 352 0062 DCE7     		b	.L14
 353              	.LVL21:
 354              	.L18:
 355              	.LBB8:
 202:Src/stm32f0xx_hal_msp.c ****     /**I2C2 GPIO Configuration
 356              		.loc 1 202 0
 357 0064 124C     		ldr	r4, .L19+8
 358              	.LVL22:
 359 0066 6269     		ldr	r2, [r4, #20]
 360 0068 8021     		movs	r1, #128
 361 006a C902     		lsls	r1, r1, #11
 362 006c 0A43     		orrs	r2, r1
 363 006e 6261     		str	r2, [r4, #20]
 364 0070 6369     		ldr	r3, [r4, #20]
 365 0072 0B40     		ands	r3, r1
 366 0074 0393     		str	r3, [sp, #12]
 367 0076 039B     		ldr	r3, [sp, #12]
 368              	.LBE8:
 207:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 369              		.loc 1 207 0
 370 0078 C023     		movs	r3, #192
 371 007a 1B01     		lsls	r3, r3, #4
 372 007c 0593     		str	r3, [sp, #20]
 208:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 373              		.loc 1 208 0
 374 007e 1223     		movs	r3, #18
 375 0080 0693     		str	r3, [sp, #24]
 209:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 376              		.loc 1 209 0
 377 0082 113B     		subs	r3, r3, #17
 378 0084 0793     		str	r3, [sp, #28]
 210:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_I2C2;
 379              		.loc 1 210 0
 380 0086 0322     		movs	r2, #3
 381 0088 0892     		str	r2, [sp, #32]
 211:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
ARM GAS  /tmp/cc9hJx5N.s 			page 12


 382              		.loc 1 211 0
 383 008a 0993     		str	r3, [sp, #36]
 212:Src/stm32f0xx_hal_msp.c **** 
 384              		.loc 1 212 0
 385 008c 05A9     		add	r1, sp, #20
 386 008e 0948     		ldr	r0, .L19+12
 387 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 388              	.LVL23:
 389              	.LBB9:
 215:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C2_MspInit 1 */
 390              		.loc 1 215 0
 391 0094 E269     		ldr	r2, [r4, #28]
 392 0096 8021     		movs	r1, #128
 393 0098 C903     		lsls	r1, r1, #15
 394 009a 0A43     		orrs	r2, r1
 395 009c E261     		str	r2, [r4, #28]
 396 009e E369     		ldr	r3, [r4, #28]
 397 00a0 0B40     		ands	r3, r1
 398 00a2 0493     		str	r3, [sp, #16]
 399 00a4 049B     		ldr	r3, [sp, #16]
 400              	.LBE9:
 401              		.loc 1 221 0
 402 00a6 BAE7     		b	.L14
 403              	.L20:
 404              		.align	2
 405              	.L19:
 406 00a8 00540040 		.word	1073763328
 407 00ac 00580040 		.word	1073764352
 408 00b0 00100240 		.word	1073876992
 409 00b4 00040048 		.word	1207960576
 410              		.cfi_endproc
 411              	.LFE40:
 413              		.section	.text.HAL_I2C_MspDeInit,"ax",%progbits
 414              		.align	1
 415              		.global	HAL_I2C_MspDeInit
 416              		.syntax unified
 417              		.code	16
 418              		.thumb_func
 419              		.fpu softvfp
 421              	HAL_I2C_MspDeInit:
 422              	.LFB41:
 222:Src/stm32f0xx_hal_msp.c **** 
 223:Src/stm32f0xx_hal_msp.c **** /**
 224:Src/stm32f0xx_hal_msp.c **** * @brief I2C MSP De-Initialization
 225:Src/stm32f0xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 226:Src/stm32f0xx_hal_msp.c **** * @param hi2c: I2C handle pointer
 227:Src/stm32f0xx_hal_msp.c **** * @retval None
 228:Src/stm32f0xx_hal_msp.c **** */
 229:Src/stm32f0xx_hal_msp.c **** void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
 230:Src/stm32f0xx_hal_msp.c **** {
 423              		.loc 1 230 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              	.LVL24:
 428 0000 10B5     		push	{r4, lr}
 429              	.LCFI6:
ARM GAS  /tmp/cc9hJx5N.s 			page 13


 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 4, -8
 432              		.cfi_offset 14, -4
 231:Src/stm32f0xx_hal_msp.c ****   if(hi2c->Instance==I2C1)
 433              		.loc 1 231 0
 434 0002 0368     		ldr	r3, [r0]
 435 0004 0D4A     		ldr	r2, .L26
 436 0006 9342     		cmp	r3, r2
 437 0008 03D0     		beq	.L24
 232:Src/stm32f0xx_hal_msp.c ****   {
 233:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C1_MspDeInit 0 */
 234:Src/stm32f0xx_hal_msp.c **** 
 235:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END I2C1_MspDeInit 0 */
 236:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 237:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_I2C1_CLK_DISABLE();
 238:Src/stm32f0xx_hal_msp.c **** 
 239:Src/stm32f0xx_hal_msp.c ****     /**I2C1 GPIO Configuration
 240:Src/stm32f0xx_hal_msp.c ****     PB6     ------> I2C1_SCL
 241:Src/stm32f0xx_hal_msp.c ****     PB7     ------> I2C1_SDA
 242:Src/stm32f0xx_hal_msp.c ****     */
 243:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, OLED_SCL_Pin|OLED_SDA_Pin);
 244:Src/stm32f0xx_hal_msp.c **** 
 245:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C1_MspDeInit 1 */
 246:Src/stm32f0xx_hal_msp.c **** 
 247:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END I2C1_MspDeInit 1 */
 248:Src/stm32f0xx_hal_msp.c ****   }
 249:Src/stm32f0xx_hal_msp.c ****   else if(hi2c->Instance==I2C2)
 438              		.loc 1 249 0
 439 000a 0D4A     		ldr	r2, .L26+4
 440 000c 9342     		cmp	r3, r2
 441 000e 0AD0     		beq	.L25
 442              	.LVL25:
 443              	.L21:
 250:Src/stm32f0xx_hal_msp.c ****   {
 251:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C2_MspDeInit 0 */
 252:Src/stm32f0xx_hal_msp.c **** 
 253:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END I2C2_MspDeInit 0 */
 254:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 255:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_I2C2_CLK_DISABLE();
 256:Src/stm32f0xx_hal_msp.c **** 
 257:Src/stm32f0xx_hal_msp.c ****     /**I2C2 GPIO Configuration
 258:Src/stm32f0xx_hal_msp.c ****     PB10     ------> I2C2_SCL
 259:Src/stm32f0xx_hal_msp.c ****     PB11     ------> I2C2_SDA
 260:Src/stm32f0xx_hal_msp.c ****     */
 261:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, STUSB_SCL_Pin|STUSB_SDA_Pin);
 262:Src/stm32f0xx_hal_msp.c **** 
 263:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C2_MspDeInit 1 */
 264:Src/stm32f0xx_hal_msp.c **** 
 265:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END I2C2_MspDeInit 1 */
 266:Src/stm32f0xx_hal_msp.c ****   }
 267:Src/stm32f0xx_hal_msp.c **** 
 268:Src/stm32f0xx_hal_msp.c **** }
 444              		.loc 1 268 0
 445              		@ sp needed
 446 0010 10BD     		pop	{r4, pc}
 447              	.LVL26:
 448              	.L24:
ARM GAS  /tmp/cc9hJx5N.s 			page 14


 237:Src/stm32f0xx_hal_msp.c **** 
 449              		.loc 1 237 0
 450 0012 0C4A     		ldr	r2, .L26+8
 451 0014 D369     		ldr	r3, [r2, #28]
 452 0016 0C49     		ldr	r1, .L26+12
 453 0018 0B40     		ands	r3, r1
 454 001a D361     		str	r3, [r2, #28]
 243:Src/stm32f0xx_hal_msp.c **** 
 455              		.loc 1 243 0
 456 001c C021     		movs	r1, #192
 457 001e 0B48     		ldr	r0, .L26+16
 458              	.LVL27:
 459 0020 FFF7FEFF 		bl	HAL_GPIO_DeInit
 460              	.LVL28:
 461 0024 F4E7     		b	.L21
 462              	.LVL29:
 463              	.L25:
 255:Src/stm32f0xx_hal_msp.c **** 
 464              		.loc 1 255 0
 465 0026 074A     		ldr	r2, .L26+8
 466 0028 D369     		ldr	r3, [r2, #28]
 467 002a 0949     		ldr	r1, .L26+20
 468 002c 0B40     		ands	r3, r1
 469 002e D361     		str	r3, [r2, #28]
 261:Src/stm32f0xx_hal_msp.c **** 
 470              		.loc 1 261 0
 471 0030 C021     		movs	r1, #192
 472 0032 0901     		lsls	r1, r1, #4
 473 0034 0548     		ldr	r0, .L26+16
 474              	.LVL30:
 475 0036 FFF7FEFF 		bl	HAL_GPIO_DeInit
 476              	.LVL31:
 477              		.loc 1 268 0
 478 003a E9E7     		b	.L21
 479              	.L27:
 480              		.align	2
 481              	.L26:
 482 003c 00540040 		.word	1073763328
 483 0040 00580040 		.word	1073764352
 484 0044 00100240 		.word	1073876992
 485 0048 FFFFDFFF 		.word	-2097153
 486 004c 00040048 		.word	1207960576
 487 0050 FFFFBFFF 		.word	-4194305
 488              		.cfi_endproc
 489              	.LFE41:
 491              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
 492              		.align	1
 493              		.global	HAL_TIM_PWM_MspInit
 494              		.syntax unified
 495              		.code	16
 496              		.thumb_func
 497              		.fpu softvfp
 499              	HAL_TIM_PWM_MspInit:
 500              	.LFB42:
 269:Src/stm32f0xx_hal_msp.c **** 
 270:Src/stm32f0xx_hal_msp.c **** /**
 271:Src/stm32f0xx_hal_msp.c **** * @brief TIM_PWM MSP Initialization
ARM GAS  /tmp/cc9hJx5N.s 			page 15


 272:Src/stm32f0xx_hal_msp.c **** * This function configures the hardware resources used in this example
 273:Src/stm32f0xx_hal_msp.c **** * @param htim_pwm: TIM_PWM handle pointer
 274:Src/stm32f0xx_hal_msp.c **** * @retval None
 275:Src/stm32f0xx_hal_msp.c **** */
 276:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
 277:Src/stm32f0xx_hal_msp.c **** {
 501              		.loc 1 277 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 8
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              	.LVL32:
 506 0000 00B5     		push	{lr}
 507              	.LCFI7:
 508              		.cfi_def_cfa_offset 4
 509              		.cfi_offset 14, -4
 510 0002 83B0     		sub	sp, sp, #12
 511              	.LCFI8:
 512              		.cfi_def_cfa_offset 16
 278:Src/stm32f0xx_hal_msp.c ****   if(htim_pwm->Instance==TIM1)
 513              		.loc 1 278 0
 514 0004 0268     		ldr	r2, [r0]
 515 0006 104B     		ldr	r3, .L31
 516 0008 9A42     		cmp	r2, r3
 517 000a 01D0     		beq	.L30
 518              	.LVL33:
 519              	.L28:
 279:Src/stm32f0xx_hal_msp.c ****   {
 280:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 281:Src/stm32f0xx_hal_msp.c **** 
 282:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM1_MspInit 0 */
 283:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 284:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
 285:Src/stm32f0xx_hal_msp.c ****     /* TIM1 interrupt Init */
 286:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_SetPriority(TIM1_BRK_UP_TRG_COM_IRQn, 0, 0);
 287:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM1_BRK_UP_TRG_COM_IRQn);
 288:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_SetPriority(TIM1_CC_IRQn, 0, 0);
 289:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM1_CC_IRQn);
 290:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 291:Src/stm32f0xx_hal_msp.c **** 
 292:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM1_MspInit 1 */
 293:Src/stm32f0xx_hal_msp.c ****   }
 294:Src/stm32f0xx_hal_msp.c **** }
 520              		.loc 1 294 0
 521 000c 03B0     		add	sp, sp, #12
 522              		@ sp needed
 523 000e 00BD     		pop	{pc}
 524              	.LVL34:
 525              	.L30:
 526              	.LBB10:
 284:Src/stm32f0xx_hal_msp.c ****     /* TIM1 interrupt Init */
 527              		.loc 1 284 0
 528 0010 0E4A     		ldr	r2, .L31+4
 529 0012 9169     		ldr	r1, [r2, #24]
 530 0014 8020     		movs	r0, #128
 531              	.LVL35:
 532 0016 0001     		lsls	r0, r0, #4
 533 0018 0143     		orrs	r1, r0
ARM GAS  /tmp/cc9hJx5N.s 			page 16


 534 001a 9161     		str	r1, [r2, #24]
 535 001c 9369     		ldr	r3, [r2, #24]
 536 001e 0340     		ands	r3, r0
 537 0020 0193     		str	r3, [sp, #4]
 538 0022 019B     		ldr	r3, [sp, #4]
 539              	.LBE10:
 286:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM1_BRK_UP_TRG_COM_IRQn);
 540              		.loc 1 286 0
 541 0024 0022     		movs	r2, #0
 542 0026 0021     		movs	r1, #0
 543 0028 0D20     		movs	r0, #13
 544 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 545              	.LVL36:
 287:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_SetPriority(TIM1_CC_IRQn, 0, 0);
 546              		.loc 1 287 0
 547 002e 0D20     		movs	r0, #13
 548 0030 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 549              	.LVL37:
 288:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM1_CC_IRQn);
 550              		.loc 1 288 0
 551 0034 0022     		movs	r2, #0
 552 0036 0021     		movs	r1, #0
 553 0038 0E20     		movs	r0, #14
 554 003a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 555              	.LVL38:
 289:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 556              		.loc 1 289 0
 557 003e 0E20     		movs	r0, #14
 558 0040 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 559              	.LVL39:
 560              		.loc 1 294 0
 561 0044 E2E7     		b	.L28
 562              	.L32:
 563 0046 C046     		.align	2
 564              	.L31:
 565 0048 002C0140 		.word	1073818624
 566 004c 00100240 		.word	1073876992
 567              		.cfi_endproc
 568              	.LFE42:
 570              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 571              		.align	1
 572              		.global	HAL_TIM_MspPostInit
 573              		.syntax unified
 574              		.code	16
 575              		.thumb_func
 576              		.fpu softvfp
 578              	HAL_TIM_MspPostInit:
 579              	.LFB43:
 295:Src/stm32f0xx_hal_msp.c **** 
 296:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
 297:Src/stm32f0xx_hal_msp.c **** {
 580              		.loc 1 297 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 32
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              	.LVL40:
 585 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/cc9hJx5N.s 			page 17


 586              	.LCFI9:
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 4, -8
 589              		.cfi_offset 14, -4
 590 0002 88B0     		sub	sp, sp, #32
 591              	.LCFI10:
 592              		.cfi_def_cfa_offset 40
 593 0004 0400     		movs	r4, r0
 298:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 594              		.loc 1 298 0
 595 0006 1422     		movs	r2, #20
 596 0008 0021     		movs	r1, #0
 597 000a 03A8     		add	r0, sp, #12
 598              	.LVL41:
 599 000c FFF7FEFF 		bl	memset
 600              	.LVL42:
 299:Src/stm32f0xx_hal_msp.c ****   if(htim->Instance==TIM1)
 601              		.loc 1 299 0
 602 0010 2268     		ldr	r2, [r4]
 603 0012 124B     		ldr	r3, .L36
 604 0014 9A42     		cmp	r2, r3
 605 0016 01D0     		beq	.L35
 606              	.L33:
 300:Src/stm32f0xx_hal_msp.c ****   {
 301:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 302:Src/stm32f0xx_hal_msp.c **** 
 303:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM1_MspPostInit 0 */
 304:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
 305:Src/stm32f0xx_hal_msp.c **** 
 306:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 307:Src/stm32f0xx_hal_msp.c ****     /**TIM1 GPIO Configuration
 308:Src/stm32f0xx_hal_msp.c ****     PA8     ------> TIM1_CH1
 309:Src/stm32f0xx_hal_msp.c ****     */
 310:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = PWMOUT_Pin;
 311:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 312:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 313:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 314:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM1;
 315:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(PWMOUT_GPIO_Port, &GPIO_InitStruct);
 316:Src/stm32f0xx_hal_msp.c **** 
 317:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 318:Src/stm32f0xx_hal_msp.c **** 
 319:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM1_MspPostInit 1 */
 320:Src/stm32f0xx_hal_msp.c ****   }
 321:Src/stm32f0xx_hal_msp.c **** 
 322:Src/stm32f0xx_hal_msp.c **** }
 607              		.loc 1 322 0
 608 0018 08B0     		add	sp, sp, #32
 609              		@ sp needed
 610              	.LVL43:
 611 001a 10BD     		pop	{r4, pc}
 612              	.LVL44:
 613              	.L35:
 614              	.LBB11:
 304:Src/stm32f0xx_hal_msp.c **** 
 615              		.loc 1 304 0
 616 001c 104B     		ldr	r3, .L36+4
ARM GAS  /tmp/cc9hJx5N.s 			page 18


 617 001e 9969     		ldr	r1, [r3, #24]
 618 0020 8020     		movs	r0, #128
 619 0022 0001     		lsls	r0, r0, #4
 620 0024 0143     		orrs	r1, r0
 621 0026 9961     		str	r1, [r3, #24]
 622 0028 9A69     		ldr	r2, [r3, #24]
 623 002a 0240     		ands	r2, r0
 624 002c 0192     		str	r2, [sp, #4]
 625 002e 019A     		ldr	r2, [sp, #4]
 626              	.LBE11:
 627              	.LBB12:
 306:Src/stm32f0xx_hal_msp.c ****     /**TIM1 GPIO Configuration
 628              		.loc 1 306 0
 629 0030 5A69     		ldr	r2, [r3, #20]
 630 0032 8021     		movs	r1, #128
 631 0034 8902     		lsls	r1, r1, #10
 632 0036 0A43     		orrs	r2, r1
 633 0038 5A61     		str	r2, [r3, #20]
 634 003a 5B69     		ldr	r3, [r3, #20]
 635 003c 0B40     		ands	r3, r1
 636 003e 0293     		str	r3, [sp, #8]
 637 0040 029B     		ldr	r3, [sp, #8]
 638              	.LBE12:
 310:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 639              		.loc 1 310 0
 640 0042 8023     		movs	r3, #128
 641 0044 5B00     		lsls	r3, r3, #1
 642 0046 0393     		str	r3, [sp, #12]
 311:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 643              		.loc 1 311 0
 644 0048 FE3B     		subs	r3, r3, #254
 645 004a 0493     		str	r3, [sp, #16]
 314:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(PWMOUT_GPIO_Port, &GPIO_InitStruct);
 646              		.loc 1 314 0
 647 004c 0793     		str	r3, [sp, #28]
 315:Src/stm32f0xx_hal_msp.c **** 
 648              		.loc 1 315 0
 649 004e 9020     		movs	r0, #144
 650 0050 03A9     		add	r1, sp, #12
 651 0052 C005     		lsls	r0, r0, #23
 652 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 653              	.LVL45:
 654              		.loc 1 322 0
 655 0058 DEE7     		b	.L33
 656              	.L37:
 657 005a C046     		.align	2
 658              	.L36:
 659 005c 002C0140 		.word	1073818624
 660 0060 00100240 		.word	1073876992
 661              		.cfi_endproc
 662              	.LFE43:
 664              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 665              		.align	1
 666              		.global	HAL_TIM_PWM_MspDeInit
 667              		.syntax unified
 668              		.code	16
 669              		.thumb_func
ARM GAS  /tmp/cc9hJx5N.s 			page 19


 670              		.fpu softvfp
 672              	HAL_TIM_PWM_MspDeInit:
 673              	.LFB44:
 323:Src/stm32f0xx_hal_msp.c **** /**
 324:Src/stm32f0xx_hal_msp.c **** * @brief TIM_PWM MSP De-Initialization
 325:Src/stm32f0xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 326:Src/stm32f0xx_hal_msp.c **** * @param htim_pwm: TIM_PWM handle pointer
 327:Src/stm32f0xx_hal_msp.c **** * @retval None
 328:Src/stm32f0xx_hal_msp.c **** */
 329:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* htim_pwm)
 330:Src/stm32f0xx_hal_msp.c **** {
 674              		.loc 1 330 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              	.LVL46:
 679 0000 10B5     		push	{r4, lr}
 680              	.LCFI11:
 681              		.cfi_def_cfa_offset 8
 682              		.cfi_offset 4, -8
 683              		.cfi_offset 14, -4
 331:Src/stm32f0xx_hal_msp.c ****   if(htim_pwm->Instance==TIM1)
 684              		.loc 1 331 0
 685 0002 0268     		ldr	r2, [r0]
 686 0004 074B     		ldr	r3, .L41
 687 0006 9A42     		cmp	r2, r3
 688 0008 00D0     		beq	.L40
 689              	.LVL47:
 690              	.L38:
 332:Src/stm32f0xx_hal_msp.c ****   {
 333:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 334:Src/stm32f0xx_hal_msp.c **** 
 335:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 336:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 337:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 338:Src/stm32f0xx_hal_msp.c **** 
 339:Src/stm32f0xx_hal_msp.c ****     /* TIM1 interrupt DeInit */
 340:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(TIM1_BRK_UP_TRG_COM_IRQn);
 341:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(TIM1_CC_IRQn);
 342:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 343:Src/stm32f0xx_hal_msp.c **** 
 344:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 345:Src/stm32f0xx_hal_msp.c ****   }
 346:Src/stm32f0xx_hal_msp.c **** 
 347:Src/stm32f0xx_hal_msp.c **** }
 691              		.loc 1 347 0
 692              		@ sp needed
 693 000a 10BD     		pop	{r4, pc}
 694              	.LVL48:
 695              	.L40:
 337:Src/stm32f0xx_hal_msp.c **** 
 696              		.loc 1 337 0
 697 000c 064A     		ldr	r2, .L41+4
 698 000e 9369     		ldr	r3, [r2, #24]
 699 0010 0649     		ldr	r1, .L41+8
 700 0012 0B40     		ands	r3, r1
 701 0014 9361     		str	r3, [r2, #24]
ARM GAS  /tmp/cc9hJx5N.s 			page 20


 340:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(TIM1_CC_IRQn);
 702              		.loc 1 340 0
 703 0016 0D20     		movs	r0, #13
 704              	.LVL49:
 705 0018 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 706              	.LVL50:
 341:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 707              		.loc 1 341 0
 708 001c 0E20     		movs	r0, #14
 709 001e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 710              	.LVL51:
 711              		.loc 1 347 0
 712 0022 F2E7     		b	.L38
 713              	.L42:
 714              		.align	2
 715              	.L41:
 716 0024 002C0140 		.word	1073818624
 717 0028 00100240 		.word	1073876992
 718 002c FFF7FFFF 		.word	-2049
 719              		.cfi_endproc
 720              	.LFE44:
 722              		.section	.text.HAL_PCD_MspInit,"ax",%progbits
 723              		.align	1
 724              		.global	HAL_PCD_MspInit
 725              		.syntax unified
 726              		.code	16
 727              		.thumb_func
 728              		.fpu softvfp
 730              	HAL_PCD_MspInit:
 731              	.LFB45:
 348:Src/stm32f0xx_hal_msp.c **** 
 349:Src/stm32f0xx_hal_msp.c **** /**
 350:Src/stm32f0xx_hal_msp.c **** * @brief PCD MSP Initialization
 351:Src/stm32f0xx_hal_msp.c **** * This function configures the hardware resources used in this example
 352:Src/stm32f0xx_hal_msp.c **** * @param hpcd: PCD handle pointer
 353:Src/stm32f0xx_hal_msp.c **** * @retval None
 354:Src/stm32f0xx_hal_msp.c **** */
 355:Src/stm32f0xx_hal_msp.c **** void HAL_PCD_MspInit(PCD_HandleTypeDef* hpcd)
 356:Src/stm32f0xx_hal_msp.c **** {
 732              		.loc 1 356 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 8
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              		@ link register save eliminated.
 737              	.LVL52:
 738 0000 82B0     		sub	sp, sp, #8
 739              	.LCFI12:
 740              		.cfi_def_cfa_offset 8
 357:Src/stm32f0xx_hal_msp.c ****   if(hpcd->Instance==USB)
 741              		.loc 1 357 0
 742 0002 0268     		ldr	r2, [r0]
 743 0004 074B     		ldr	r3, .L46
 744 0006 9A42     		cmp	r2, r3
 745 0008 01D0     		beq	.L45
 746              	.LVL53:
 747              	.L43:
 358:Src/stm32f0xx_hal_msp.c ****   {
ARM GAS  /tmp/cc9hJx5N.s 			page 21


 359:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USB_MspInit 0 */
 360:Src/stm32f0xx_hal_msp.c **** 
 361:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USB_MspInit 0 */
 362:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 363:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_USB_CLK_ENABLE();
 364:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USB_MspInit 1 */
 365:Src/stm32f0xx_hal_msp.c **** 
 366:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USB_MspInit 1 */
 367:Src/stm32f0xx_hal_msp.c ****   }
 368:Src/stm32f0xx_hal_msp.c **** 
 369:Src/stm32f0xx_hal_msp.c **** }
 748              		.loc 1 369 0
 749 000a 02B0     		add	sp, sp, #8
 750              		@ sp needed
 751 000c 7047     		bx	lr
 752              	.LVL54:
 753              	.L45:
 754              	.LBB13:
 363:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USB_MspInit 1 */
 755              		.loc 1 363 0
 756 000e 064A     		ldr	r2, .L46+4
 757 0010 D169     		ldr	r1, [r2, #28]
 758 0012 8020     		movs	r0, #128
 759              	.LVL55:
 760 0014 0004     		lsls	r0, r0, #16
 761 0016 0143     		orrs	r1, r0
 762 0018 D161     		str	r1, [r2, #28]
 763 001a D369     		ldr	r3, [r2, #28]
 764 001c 0340     		ands	r3, r0
 765 001e 0193     		str	r3, [sp, #4]
 766 0020 019B     		ldr	r3, [sp, #4]
 767              	.LBE13:
 768              		.loc 1 369 0
 769 0022 F2E7     		b	.L43
 770              	.L47:
 771              		.align	2
 772              	.L46:
 773 0024 005C0040 		.word	1073765376
 774 0028 00100240 		.word	1073876992
 775              		.cfi_endproc
 776              	.LFE45:
 778              		.section	.text.HAL_PCD_MspDeInit,"ax",%progbits
 779              		.align	1
 780              		.global	HAL_PCD_MspDeInit
 781              		.syntax unified
 782              		.code	16
 783              		.thumb_func
 784              		.fpu softvfp
 786              	HAL_PCD_MspDeInit:
 787              	.LFB46:
 370:Src/stm32f0xx_hal_msp.c **** 
 371:Src/stm32f0xx_hal_msp.c **** /**
 372:Src/stm32f0xx_hal_msp.c **** * @brief PCD MSP De-Initialization
 373:Src/stm32f0xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 374:Src/stm32f0xx_hal_msp.c **** * @param hpcd: PCD handle pointer
 375:Src/stm32f0xx_hal_msp.c **** * @retval None
 376:Src/stm32f0xx_hal_msp.c **** */
ARM GAS  /tmp/cc9hJx5N.s 			page 22


 377:Src/stm32f0xx_hal_msp.c **** void HAL_PCD_MspDeInit(PCD_HandleTypeDef* hpcd)
 378:Src/stm32f0xx_hal_msp.c **** {
 788              		.loc 1 378 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792              		@ link register save eliminated.
 793              	.LVL56:
 379:Src/stm32f0xx_hal_msp.c ****   if(hpcd->Instance==USB)
 794              		.loc 1 379 0
 795 0000 0268     		ldr	r2, [r0]
 796 0002 054B     		ldr	r3, .L51
 797 0004 9A42     		cmp	r2, r3
 798 0006 00D0     		beq	.L50
 799              	.L48:
 380:Src/stm32f0xx_hal_msp.c ****   {
 381:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USB_MspDeInit 0 */
 382:Src/stm32f0xx_hal_msp.c **** 
 383:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USB_MspDeInit 0 */
 384:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 385:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_USB_CLK_DISABLE();
 386:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USB_MspDeInit 1 */
 387:Src/stm32f0xx_hal_msp.c **** 
 388:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USB_MspDeInit 1 */
 389:Src/stm32f0xx_hal_msp.c ****   }
 390:Src/stm32f0xx_hal_msp.c **** 
 391:Src/stm32f0xx_hal_msp.c **** }
 800              		.loc 1 391 0
 801              		@ sp needed
 802 0008 7047     		bx	lr
 803              	.L50:
 385:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USB_MspDeInit 1 */
 804              		.loc 1 385 0
 805 000a 044A     		ldr	r2, .L51+4
 806 000c D369     		ldr	r3, [r2, #28]
 807 000e 0449     		ldr	r1, .L51+8
 808 0010 0B40     		ands	r3, r1
 809 0012 D361     		str	r3, [r2, #28]
 810              		.loc 1 391 0
 811 0014 F8E7     		b	.L48
 812              	.L52:
 813 0016 C046     		.align	2
 814              	.L51:
 815 0018 005C0040 		.word	1073765376
 816 001c 00100240 		.word	1073876992
 817 0020 FFFF7FFF 		.word	-8388609
 818              		.cfi_endproc
 819              	.LFE46:
 821              		.text
 822              	.Letext0:
 823              		.file 2 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machin
 824              		.file 3 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_s
 825              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 826              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 827              		.file 6 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lo
 828              		.file 7 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_t
 829              		.file 8 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/
ARM GAS  /tmp/cc9hJx5N.s 			page 23


 830              		.file 9 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/re
 831              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 832              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 833              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 834              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 835              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c.h"
 836              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pcd.h"
 837              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 838              		.file 17 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 839              		.file 18 "<built-in>"
ARM GAS  /tmp/cc9hJx5N.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_msp.c
     /tmp/cc9hJx5N.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/cc9hJx5N.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/cc9hJx5N.s:65     .text.HAL_MspInit:000000000000002c $d
     /tmp/cc9hJx5N.s:70     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/cc9hJx5N.s:77     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/cc9hJx5N.s:190    .text.HAL_ADC_MspInit:0000000000000088 $d
     /tmp/cc9hJx5N.s:198    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/cc9hJx5N.s:205    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/cc9hJx5N.s:253    .text.HAL_ADC_MspDeInit:000000000000002c $d
     /tmp/cc9hJx5N.s:260    .text.HAL_I2C_MspInit:0000000000000000 $t
     /tmp/cc9hJx5N.s:267    .text.HAL_I2C_MspInit:0000000000000000 HAL_I2C_MspInit
     /tmp/cc9hJx5N.s:406    .text.HAL_I2C_MspInit:00000000000000a8 $d
     /tmp/cc9hJx5N.s:414    .text.HAL_I2C_MspDeInit:0000000000000000 $t
     /tmp/cc9hJx5N.s:421    .text.HAL_I2C_MspDeInit:0000000000000000 HAL_I2C_MspDeInit
     /tmp/cc9hJx5N.s:482    .text.HAL_I2C_MspDeInit:000000000000003c $d
     /tmp/cc9hJx5N.s:492    .text.HAL_TIM_PWM_MspInit:0000000000000000 $t
     /tmp/cc9hJx5N.s:499    .text.HAL_TIM_PWM_MspInit:0000000000000000 HAL_TIM_PWM_MspInit
     /tmp/cc9hJx5N.s:565    .text.HAL_TIM_PWM_MspInit:0000000000000048 $d
     /tmp/cc9hJx5N.s:571    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/cc9hJx5N.s:578    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/cc9hJx5N.s:659    .text.HAL_TIM_MspPostInit:000000000000005c $d
     /tmp/cc9hJx5N.s:665    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 $t
     /tmp/cc9hJx5N.s:672    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 HAL_TIM_PWM_MspDeInit
     /tmp/cc9hJx5N.s:716    .text.HAL_TIM_PWM_MspDeInit:0000000000000024 $d
     /tmp/cc9hJx5N.s:723    .text.HAL_PCD_MspInit:0000000000000000 $t
     /tmp/cc9hJx5N.s:730    .text.HAL_PCD_MspInit:0000000000000000 HAL_PCD_MspInit
     /tmp/cc9hJx5N.s:773    .text.HAL_PCD_MspInit:0000000000000024 $d
     /tmp/cc9hJx5N.s:779    .text.HAL_PCD_MspDeInit:0000000000000000 $t
     /tmp/cc9hJx5N.s:786    .text.HAL_PCD_MspDeInit:0000000000000000 HAL_PCD_MspDeInit
     /tmp/cc9hJx5N.s:815    .text.HAL_PCD_MspDeInit:0000000000000018 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_Init
HAL_DMA_Init
hdma_adc
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
